parameters:
  - name: terraformPath
    type: string
    default: false

steps:
  - bash: |
      terraform show -json $TF_PLAN_FILE > terraform.plan.json
      terraform show -no-color $TF_PLAN_FILE > terraform.plan.txt

      FILE_TXT=$(cat terraform.plan.txt)
      for line in $FILE_TXT
      do
        TF_PLAN_FILE_TXT .= "$line\n"
      done

      We need to strip the single quotes that are wrapping it so we can parse it with JQ
      TF_PLAN_FILE=$(cat terraform.plan.json | sed "s/^'//g" | sed "s/'$//g")

      # Get the count of the number of resources being created
      TF_PLAN_TO_BE_CREATED=$(echo "$TF_PLAN_FILE" | jq -r ".resource_changes[].change.actions[]" | grep "create" | wc -l | sed 's/^[[:space:]]*//g')

      # Get the count of the number of resources being updated
      TF_PLAN_TO_BE_UPDATED=$(echo "$TF_PLAN_FILE" | jq -r ".resource_changes[].change.actions[]" | grep "update" | wc -l | sed 's/^[[:space:]]*//g')

      # Get the count of the number of resources being deleted
      TF_PLAN_TO_BE_DELETED=$(echo "$TF_PLAN_FILE" | jq -r ".resource_changes[].change.actions[]" | grep "delete" | wc -l | sed 's/^[[:space:]]*//g')

      echo "##vso[task.setvariable variable=TF_PLAN_COMMENT_PR_TO_BE_CREATED]$TF_PLAN_TO_BE_CREATED"
      echo "##vso[task.setvariable variable=TF_PLAN_COMMENT_PR_TO_BE_UPDATED]$TF_PLAN_TO_BE_UPDATED"
      echo "##vso[task.setvariable variable=TF_PLAN_COMMENT_PR_TO_BE_DELETED]$TF_PLAN_TO_BE_DELETED"

      echo "##vso[task.setvariable variable=TF_PLAN_COMMENT_PR_FILE]$TF_PLAN_FILE"
      echo "##vso[task.setvariable variable=TF_PLAN_COMMENT_PR_FILE_TXT]$TF_PLAN_FILE_TXT"
    name: GetTerraformPlan
    displayName: "Get Terraform Plan"
    workingDirectory: ${{ parameters.terraformPath }}